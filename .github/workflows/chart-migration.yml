name: Helm Chart migration

on:
  workflow_dispatch: 
    inputs:
      filepath:
        required: true
        type: choice
        description: Select Filepath
        options:
          - 'env-details/test.yaml'
        
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      S_REG: "ghcr.io/srikanthhg"
      VS_REG: "ghcr.io/Vajrapu-Srikanth"
      S_USER: "srikanthhg"
      S_PASS: ${{ secrets.S_OLD_TOKEN }}
      VS_USER: "Vajrapu-Srikanth"
      VS_PASS: ${{ secrets.S_NEW_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - run: |
           ls -ltr

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
            version: v3.15.2
      
      - name: Run Deployment Script
        run: |
          
          #!/bin/bash
          set -e

          # specify the path to the env-details file
          ENV_FILE_PATH="./${{ inputs.filepath }}"

          while read -r line; do
              CHART=$(echo "$line" | cut -d':' -f1)
              TAG=$(echo "$line" | cut -d'|' -f1 | cut -d':' -f2 | tr -d ' ')
              echo -e "\n============== Chart Details: $CHART:$TAG ================"

              rm -rf charts/$CHART || true

              # login to source registry
              echo "$S_PASS" | helm registry login ghcr.io --username "$S_USER" --password-stdin

              # try pulling chart from source
              if helm pull oci://$S_REG/$CHART --version "$TAG" --untar -d ./charts; then
                  echo "✅ Pulled $CHART:$TAG from $S_REG"
              else
                  echo "⚠️ Chart $CHART:$TAG not found in $S_REG. Skipping..."
                  echo "Chart $CHART:$TAG not found in $S_REG" >> $GITHUB_STEP_SUMMARY
                  continue
              fi

              cd ./charts/$CHART

              # Replace registry references in values.yaml
              sed -i "s|$S_REG|$VS_REG|g" values.yaml

              echo -e "\n**** Repo name in $CHART values.yaml"
              grep "repository:" values.yaml || true

              # Image validation (skip for certain charts)
              if [[ ! "$CHART" =~ ^(com-met|hello|metadata)$ ]]; then
                  IMAGES=$(helm template . | grep "image:" | awk '{print $2}' | tr -d '"')
                  echo -e "**** Images associated with Chart:\n $IMAGES"

                  echo "$VS_PASS" | docker login ghcr.io -u "$VS_USER" --password-stdin

                  IMAGE_MISSING=false
                  for i in $IMAGES; do
                      if docker manifest inspect "$i" > /dev/null 2>&1; then
                          echo "✅ Image $i exists"
                      else
                          echo "⚠️ Image $i does not exist, skipping..." >> $GITHUB_STEP_SUMMARY
                          IMAGE_MISSING=true
                      fi
                  done

                  if [ "$IMAGE_MISSING" = true ]; then
                      echo "Skipping chart $CHART:$TAG due to missing images"
                      cd ../../
                      rm -rf ./charts/$CHART
                      continue
                  fi
              else
                  echo "Skipping image validation for $CHART"
              fi

              # Package chart again (with updated values.yaml)
              helm package . 
              mv $CHART-$TAG.tgz ../../

              cd ../../

              # Push to destination registry
              echo "$VS_PASS" | helm registry login ghcr.io --username "$VS_USER" --password-stdin
              helm push $CHART-$TAG.tgz oci://$VS_REG

              echo "✅ Pushed $CHART:$TAG to $VS_REG"
              echo "✅ Pushed $CHART:$TAG to $VS_REG" >> $GITHUB_STEP_SUMMARY

              rm -rf ./charts/$CHART || true
              rm -f $CHART-$TAG.tgz

          done < "$ENV_FILE_PATH"